/*
** EPITECH PROJECT, 2021
** strace
** File description:
** syscalls table
*/

#pragma once

#include <stdlib.h>

enum syscall_type {
    NUM = 1,
    STRING = 2,
    UNSIGNED = 3,
    VOID_P = 4,
    CONST_VOID_P = 5,
    STRUCT_P = 7,
    STRUCT_STAT_P = 8,
    STRUCT_FD_P = 9,
    PVOID = 12,
    CONST_KERNEL_SIGSET_T_P = 13,
    KERNEL_SIGSET_T_P = 14,
    VARGS = 16,
    CONST_STRUCT_IOVEC_P = 17,
    FD_SET_P = 18,
    STRUCT_TIMEVAL_P = 19,
    VOID = 20,
    STRUCT_SHMID_DS_P = 23,
    CONST_STRUCT_TIMESPEC_P = 24,
    STRUCT_TIMESPEC_P = 25,
    STRUCT_ITIMERVAL_P = 26,
    CONST_STRUCT_ITIMERVAL_P = 28,
    CONST_STRUCT_SOCKADDR_P = 31,
    SOCKLEN_T = 32,
    STRUCT_SOCKADDR_P = 33,
    SOCKLEN_T_P = 34,
    CONST_STRUCT_MSGHDR_P = 35,
    STRUCT_MSGHDR_P = 36,
    STRUCT_RUSAGE_P = 39,
    STRUCT_UTSNAME_P = 40,
    STRUCT_SEMBUF_P = 41,
    STRUCT_MSQID_DS_P = 43,
    STRUCT_LINUX_DIRENT_P = 44,
    MODE_T = 49,
    UID_T = 51,
    GID_T = 52,
    STRUCT_TIMEZONE_P = 53,
    STRUCT_RLIMIT_P = 54,
    CLOCK_T = 55,
    STRUCT_TMS_P = 56,
    ENUM_____REQUEST = 57,
    CONST_GID_T_P = 58,
    UID_T_P = 59,
    GID_T_P = 60,
    CAP_USER_HEADER_T = 61,
    CAP_USER_DATA_T = 62,
    CONST_CAP_USER_DATA_T = 63,
    CONST_STACK_T_P = 64,
    STACK_T_P = 65,
    CONST_STRUCT_UTIMBUF_P = 66,
    DEV_T = 67,
    STRUCT_STATFS_P = 68,
    ID_T = 69,
    CONST_STRUCT_SCHED_PARAM_P = 70,
    STRUCT_SCHED_PARAM_P = 71,
    STRUCT_TIMESPEC_P_ = 72,
    STRUCT____ARGS_P = 73,
    STRUCT_TIMEX_P = 74,
    CONST_STRUCT_RLIMIT_P = 75,
    CONST_STRUCT_TIMEVAL_P = 76,
    CONST_STRUCT_TIMEZONE_P = 77,
    CADDR_T = 78,
    STRUCT_KERNEL_SYM_P = 79,
    NUM_P = 80,
    STRUCT_NFSCTL_ARG_P = 81,
    UNION_NFSCTL_RES_P = 82,
    OFF64_T = 83,
    TIME_T = 84,
    _T___T_P = 85,
    CONST_CPU_SET_T_P = 86,
    CPU_SET_T_P = 87,
    STRUCT_USER_DESC_P = 88,
    AIO_CONTEXT_T_P = 90,
    AIO_CONTEXT_T = 91,
    STRUCT_IO_EVENT_P = 92,
    STRUCT_IOCB_P = 93,
    U64 = 94,
    STRUCT_LINUX_DIRENT64_P = 95,
    CLOCKID_T = 96,
    STRUCT_SIGEVENT_P = 97,
    TIMER_T_P = 98,
    TIMER_T = 99,
    CONST_STRUCT_ITIMERSPEC_P = 100,
    STRUCT_ITIMERSPEC_P = 101,
    STRUCT_EPOLL_EVENT_P = 102,
    CONST_STRUCT_TIMEVAL = 103,
    CONST_UNSIGNED_P = 104,
    UNSIGNED_P = 105,
    MQD_T = 106,
    CONST_STRUCT_SIGEVENT_P = 108,
    STRUCT_MQ_ATTR_P = 109,
    STRUCT_KEXEC_SEGMENT_P = 110,
    IDTYPE_T = 111,
    SIGINFO_T_P = 112,
    KEY_SERIAL_T = 113,
    UNUM32_T = 114,
    STRUCT_POLLFD_P = 115,
    CONST_SIGSET_T_P = 116,
    STRUCT_ROBUST_LIST_HEAD_P = 117,
    LNUM_P = 118,
    CONST_NUM_P = 119,
    CONST_STRUCT_TIMESPEC = 120,
    STRUCT_PERF_EVENT_ATTR_P = 121,
    STRUCT_MMSGHDR_P = 122,
    UNUM64_T = 123,
    STRUCT_FILE_HANDLE_P = 124,
    STRUCT__CACHE_P = 126,
    STRUCT_SCHED_ATTR_P = 127,
    UNION__ATTR_P = 128,
} __attribute__((packed));

struct syscall_entry {
    char const *name;
    char nb_args;
    enum syscall_type ret;
    enum syscall_type args[6];
};

#define MAX_SYSCALL_NB 330

extern struct syscall_entry SYSCALL_TABLE[MAX_SYSCALL_NB];
